//----------------------------------------------------------------------------------------
// 2022. 1학기 STL 4월 13일 수요일
// 수78목23 (6주 2일)
//
// RVO(Return value optimization), Copy Ellision
// 
// 컨테이너 -> Containers are objects that store other objects
// 
// 컨테이너
// Sequence container		- 임의의 위치에 원소의 값을 읽고 쓰거나 추가할 수 있다.
//		array				- 유일하게 원소 갯수가 고정됨.
//		vector				- 깊게 알아볼 가치가 있는 컨테이너
//							- 원소를 마지막 위치에 추가하는 데 특화되어 있다 (O(1))
//		deque
//		foward_list
//		list
// 
// 예정 - 중간시험 4.20(수) (7주 2일)
// 시험시간 70분 1745~
// 
//----------------------------------------------------------------------------------------
#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>

#include "save.h"
#include "STRING.h"

using namespace std;

extern bool 관찰;

// [문제] vector의 중간에 원소를 추가한다.
// "4444" 앞에 "333"을 끼워넣어라.

int main()
{
	// push_back - 원소를 뒤에 붙이는건 (amortized : 평균적으로 )상수시간 동작이다. 어느순간엔 시간이 왕창 걸린다.
	// 언제? 새 메모리를 할당할때. 그렇지만 전체 원소를 추가하는 동작에서 시간을 평균내보면 상수시간으로 인식해도 문제 없음.

	// insert - 벡터 크기 이상의 원소를 넣을 때는 안하는게 좋음. 너무 많은 객체를 생성함.

	vector<STRING> v{ "1", "22", "4444", "55555" };

	//auto p = find_if(v.begin(), v.end(), [](vector<STRING>::iterator i) {
	//	return *i == static_cast <STRING>("4444");
	//	});

	// random access iterator

	관찰 = true;
	v.insert(next(v.begin(),2), STRING{"333"});
	관찰 = false;

	for (int i = 0; i < v.size(); ++i)
	{
		cout << v[i] << endl;
	}

	//save("소스.cpp");
}

/*생성자(*), [1] 객체 : 00000017CE39F960 자원 수 : 1 주소 : 00000118DF66E840
생성자(*), [2] 객체 : 00000017CE39F978 자원 수 : 2 주소 : 00000118DF66E850
생성자(*), [3] 객체 : 00000017CE39F990 자원 수 : 4 주소 : 00000118DF66E7D0
생성자(*), [4] 객체 : 00000017CE39F9A8 자원 수 : 5 주소 : 00000118DF66E900
복사생성, [5] 객체 : 00000118DF665F90 자원 수 : 1 주소 : 00000118DF66E8A0
복사생성, [6] 객체 : 00000118DF665FA8 자원 수 : 2 주소 : 00000118DF66E800
복사생성, [7] 객체 : 00000118DF665FC0 자원 수 : 4 주소 : 00000118DF66E810
복사생성, [8] 객체 : 00000118DF665FD8 자원 수 : 5 주소 : 00000118DF66E8E0
소멸자, [4] 객체 : 00000017CE39F9A8 자원 수 : 5 주소 : 00000118DF66E900
소멸자, [3] 객체 : 00000017CE39F990 자원 수 : 4 주소 : 00000118DF66E7D0
소멸자, [2] 객체 : 00000017CE39F978 자원 수 : 2 주소 : 00000118DF66E850
소멸자, [1] 객체 : 00000017CE39F960 자원 수 : 1 주소 : 00000118DF66E840
생성자(*), [9] 객체 : 00000017CE39F940 자원 수 : 3 주소 : 00000118DF66E8C0
이동생성, [10] 객체 : 00000118DF665220 자원 수 : 3 주소 : 00000118DF66E8C0
이동생성, [11] 객체 : 00000118DF6651F0 자원 수 : 1 주소 : 00000118DF66E8A0
이동생성, [12] 객체 : 00000118DF665208 자원 수 : 2 주소 : 00000118DF66E800
이동생성, [13] 객체 : 00000118DF665238 자원 수 : 4 주소 : 00000118DF66E810
이동생성, [14] 객체 : 00000118DF665250 자원 수 : 5 주소 : 00000118DF66E8E0
소멸자, [5] 객체 : 00000118DF665F90 자원없음
소멸자, [6] 객체 : 00000118DF665FA8 자원없음
소멸자, [7] 객체 : 00000118DF665FC0 자원없음
소멸자, [8] 객체 : 00000118DF665FD8 자원없음
소멸자, [9] 객체 : 00000017CE39F940 자원없음
1
22
333
4444
55555
소멸자, [11] 객체 : 00000118DF6651F0 자원 수 : 1 주소 : 00000118DF66E8A0
소멸자, [12] 객체 : 00000118DF665208 자원 수 : 2 주소 : 00000118DF66E800
소멸자, [10] 객체 : 00000118DF665220 자원 수 : 3 주소 : 00000118DF66E8C0
소멸자, [13] 객체 : 00000118DF665238 자원 수 : 4 주소 : 00000118DF66E810
소멸자, [14] 객체 : 00000118DF665250 자원 수 : 5 주소 : 00000118DF66E8E0*/

// 재할당 후 새로 할당된 5개짜리 벡터에 다시 넣음.