//----------------------------------------------------------------------------------------
// 2022. 1학기 STL 3월 24일 목요일
// 수78목23 (4주 1일)
// 
// 지난 시간 : RAII / stack unwinding
// 
// 이번 시간 : 호출가능(Callable) 타입 -  예제는 정렬(sort)
// 자원을 관리하는 클래스를 만들어 관찰하면서 - 컨테이너 / 반복자 / 알고리즘
// String 클래스를 만들어 나가면서 STL을 이해해본다.
// 
//----------------------------------------------------------------------------------------

#include <iostream>
#include <functional>

#include "save.h"

using namespace std;

// [문제] 
// 호출가능(Callable) 타입
// 호출가능한 타입은 어떤 것들이 있나?
// 1. 함수포인터 - CODE 세그먼트에 기록된 명령어 집합의 시작번지
// 2. 람다 - 이름 없는 함수, 실제는 클래스로 구현된다.
// 3. operator()을 오버로딩한 클래스
// 4. 멤버 함수를 가리키는 포인터
// 
// - 호출 가능 타입의 종류가 무한하기 때문에
// 모든 호출가능타입을 대표하는 클래스를 만들었다. : function
//

int add(int a, int b)
{
	return a + b;
}


int main()
{
	function<int(int, int)> f;

	f = add;

	cout << f(3, 3) << endl;


	//save("소스.cpp");
}